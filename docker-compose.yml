version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "127.0.0.1:9001:9001"
      - "127.0.0.1:9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.9
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "127.0.0.1:19530:19530"
      - "127.0.0.1:9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    image: zilliz/attu:latest
    container_name: attu_service
    ports:
      - "127.0.0.1:8000:3000"
    environment:
      HOST_URL: "http://localhost:8000"
      MILVUS_URL: milvus-standalone:19530

  backend:
    container_name: backend_service
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - MILVUS_STANDALONE_URL=http://standalone:19530
      - ENVIRONMENT=${ENVIRONMENT:-dev docker}
      - APP_VERSION=${APP_VERSION:-unknown}
      - MONGO_URI=mongodb://mongo-db:27017/
    depends_on:
      standalone:
        condition: service_healthy
      mongo-db:
        condition: service_started
      
  frontend:
    container_name: frontend_service
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=/api
        - REACT_APP_APP_VERSION=${APP_VERSION:-unknown}
    ports:
      - "8081:8081"
    depends_on:
      - "backend"

  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/mongo:/data/db
    command: mongod --dbpath /data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.runCommand(\"ping\").ok'", "||", "exit", "1"]
      interval: 30s
      timeout: 20s
      retries: 3


networks:
  default:
    name: milvus