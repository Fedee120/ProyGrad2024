version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "127.0.0.1:9001:9001"
      - "127.0.0.1:9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.9
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "127.0.0.1:19530:19530"
      - "127.0.0.1:9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    image: zilliz/attu:latest
    container_name: attu_service
    ports:
      - "127.0.0.1:8000:3000"
    environment:
      HOST_URL: "http://localhost:8000"
      MILVUS_URL: milvus-standalone:19530

  mlflow:
    container_name: mlflow_service
    image: ghcr.io/mlflow/mlflow:latest
    ports:
      - "127.0.0.1:8001:8001"
    command: mlflow server --host 0.0.0.0 --port 8001

  backend:
    container_name: backend_service
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8080:8080" # This port matches the one specified in the backend's Dockerfile
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - MILVUS_STANDALONE_URL=http://standalone:19530 # This URL overrides the one specified in the backend's .env file and matches the one specified in the standalone docker service
      - MLFLOW_TRACKING_URI=http://mlflow:8001 # This URL overrides the one specified in the backend's .env file and matches the one specified in the mlflow docker service
      - MLFLOW_EXPERIMENT=ProyGrad2024 - Chatbot
    depends_on:
      - "standalone"
      - "mlflow"
      
  frontend:
    container_name: frontend_service
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=/api # This URL overrides the one specified in the frontend's .env file and is resolved in nginx.conf which matches the one specified in the backend docker service
    ports:
      - "8081:8081" # This port matches the one specified in the frontend's Dockerfile and nginx.conf
    depends_on:
      - "backend"

networks:
  default:
    name: milvus